// Code generated by protoc-gen-go. DO NOT EDIT.
// source: udpmsg.proto

package udpmsg_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UdpMessage_MessageType int32

const (
	UdpMessage_PING      UdpMessage_MessageType = 0
	UdpMessage_PONG      UdpMessage_MessageType = 1
	UdpMessage_FINDNODE  UdpMessage_MessageType = 2
	UdpMessage_NEIGHBORS UdpMessage_MessageType = 3
)

var UdpMessage_MessageType_name = map[int32]string{
	0: "PING",
	1: "PONG",
	2: "FINDNODE",
	3: "NEIGHBORS",
}
var UdpMessage_MessageType_value = map[string]int32{
	"PING":      0,
	"PONG":      1,
	"FINDNODE":  2,
	"NEIGHBORS": 3,
}

func (x UdpMessage_MessageType) Enum() *UdpMessage_MessageType {
	p := new(UdpMessage_MessageType)
	*p = x
	return p
}
func (x UdpMessage_MessageType) String() string {
	return proto.EnumName(UdpMessage_MessageType_name, int32(x))
}
func (x *UdpMessage_MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UdpMessage_MessageType_value, data, "UdpMessage_MessageType")
	if err != nil {
		return err
	}
	*x = UdpMessage_MessageType(value)
	return nil
}
func (UdpMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 0}
}

type UdpMessage struct {
	MsgType              *UdpMessage_MessageType `protobuf:"varint,1,req,name=msgType,enum=udpmsg.pb.UdpMessage_MessageType" json:"msgType,omitempty"`
	Ping                 *UdpMessage_Ping        `protobuf:"bytes,2,opt,name=ping" json:"ping,omitempty"`
	Pong                 *UdpMessage_Pong        `protobuf:"bytes,3,opt,name=pong" json:"pong,omitempty"`
	FindNode             *UdpMessage_FindNode    `protobuf:"bytes,4,opt,name=findNode" json:"findNode,omitempty"`
	Neighbors            *UdpMessage_Neighbors   `protobuf:"bytes,5,opt,name=neighbors" json:"neighbors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UdpMessage) Reset()         { *m = UdpMessage{} }
func (m *UdpMessage) String() string { return proto.CompactTextString(m) }
func (*UdpMessage) ProtoMessage()    {}
func (*UdpMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0}
}
func (m *UdpMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage.Unmarshal(m, b)
}
func (m *UdpMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage.Marshal(b, m, deterministic)
}
func (dst *UdpMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage.Merge(dst, src)
}
func (m *UdpMessage) XXX_Size() int {
	return xxx_messageInfo_UdpMessage.Size(m)
}
func (m *UdpMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage proto.InternalMessageInfo

func (m *UdpMessage) GetMsgType() UdpMessage_MessageType {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return UdpMessage_PING
}

func (m *UdpMessage) GetPing() *UdpMessage_Ping {
	if m != nil {
		return m.Ping
	}
	return nil
}

func (m *UdpMessage) GetPong() *UdpMessage_Pong {
	if m != nil {
		return m.Pong
	}
	return nil
}

func (m *UdpMessage) GetFindNode() *UdpMessage_FindNode {
	if m != nil {
		return m.FindNode
	}
	return nil
}

func (m *UdpMessage) GetNeighbors() *UdpMessage_Neighbors {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

type UdpMessage_SubNetworkID struct {
	Id                   []byte   `protobuf:"bytes,1,req,name=Id" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpMessage_SubNetworkID) Reset()         { *m = UdpMessage_SubNetworkID{} }
func (m *UdpMessage_SubNetworkID) String() string { return proto.CompactTextString(m) }
func (*UdpMessage_SubNetworkID) ProtoMessage()    {}
func (*UdpMessage_SubNetworkID) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 0}
}
func (m *UdpMessage_SubNetworkID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage_SubNetworkID.Unmarshal(m, b)
}
func (m *UdpMessage_SubNetworkID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage_SubNetworkID.Marshal(b, m, deterministic)
}
func (dst *UdpMessage_SubNetworkID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage_SubNetworkID.Merge(dst, src)
}
func (m *UdpMessage_SubNetworkID) XXX_Size() int {
	return xxx_messageInfo_UdpMessage_SubNetworkID.Size(m)
}
func (m *UdpMessage_SubNetworkID) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage_SubNetworkID.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage_SubNetworkID proto.InternalMessageInfo

func (m *UdpMessage_SubNetworkID) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type UdpMessage_Node struct {
	IP                   []byte   `protobuf:"bytes,1,req,name=IP" json:"IP,omitempty"`
	UDP                  *uint32  `protobuf:"varint,2,req,name=UDP" json:"UDP,omitempty"`
	TCP                  *uint32  `protobuf:"varint,3,req,name=TCP" json:"TCP,omitempty"`
	NodeId               []byte   `protobuf:"bytes,4,req,name=NodeId" json:"NodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpMessage_Node) Reset()         { *m = UdpMessage_Node{} }
func (m *UdpMessage_Node) String() string { return proto.CompactTextString(m) }
func (*UdpMessage_Node) ProtoMessage()    {}
func (*UdpMessage_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 1}
}
func (m *UdpMessage_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage_Node.Unmarshal(m, b)
}
func (m *UdpMessage_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage_Node.Marshal(b, m, deterministic)
}
func (dst *UdpMessage_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage_Node.Merge(dst, src)
}
func (m *UdpMessage_Node) XXX_Size() int {
	return xxx_messageInfo_UdpMessage_Node.Size(m)
}
func (m *UdpMessage_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage_Node.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage_Node proto.InternalMessageInfo

func (m *UdpMessage_Node) GetIP() []byte {
	if m != nil {
		return m.IP
	}
	return nil
}

func (m *UdpMessage_Node) GetUDP() uint32 {
	if m != nil && m.UDP != nil {
		return *m.UDP
	}
	return 0
}

func (m *UdpMessage_Node) GetTCP() uint32 {
	if m != nil && m.TCP != nil {
		return *m.TCP
	}
	return 0
}

func (m *UdpMessage_Node) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type UdpMessage_Ping struct {
	From                 *UdpMessage_Node           `protobuf:"bytes,1,req,name=From" json:"From,omitempty"`
	To                   *UdpMessage_Node           `protobuf:"bytes,2,req,name=To" json:"To,omitempty"`
	FromSubNetId         []*UdpMessage_SubNetworkID `protobuf:"bytes,3,rep,name=FromSubNetId" json:"FromSubNetId,omitempty"`
	SubNetId             *UdpMessage_SubNetworkID   `protobuf:"bytes,4,req,name=SubNetId" json:"SubNetId,omitempty"`
	Id                   *uint64                    `protobuf:"varint,5,req,name=Id" json:"Id,omitempty"`
	Expiration           *uint64                    `protobuf:"varint,6,opt,name=Expiration" json:"Expiration,omitempty"`
	Extra                []byte                     `protobuf:"bytes,7,opt,name=Extra" json:"Extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UdpMessage_Ping) Reset()         { *m = UdpMessage_Ping{} }
func (m *UdpMessage_Ping) String() string { return proto.CompactTextString(m) }
func (*UdpMessage_Ping) ProtoMessage()    {}
func (*UdpMessage_Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 2}
}
func (m *UdpMessage_Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage_Ping.Unmarshal(m, b)
}
func (m *UdpMessage_Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage_Ping.Marshal(b, m, deterministic)
}
func (dst *UdpMessage_Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage_Ping.Merge(dst, src)
}
func (m *UdpMessage_Ping) XXX_Size() int {
	return xxx_messageInfo_UdpMessage_Ping.Size(m)
}
func (m *UdpMessage_Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage_Ping proto.InternalMessageInfo

func (m *UdpMessage_Ping) GetFrom() *UdpMessage_Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *UdpMessage_Ping) GetTo() *UdpMessage_Node {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *UdpMessage_Ping) GetFromSubNetId() []*UdpMessage_SubNetworkID {
	if m != nil {
		return m.FromSubNetId
	}
	return nil
}

func (m *UdpMessage_Ping) GetSubNetId() *UdpMessage_SubNetworkID {
	if m != nil {
		return m.SubNetId
	}
	return nil
}

func (m *UdpMessage_Ping) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UdpMessage_Ping) GetExpiration() uint64 {
	if m != nil && m.Expiration != nil {
		return *m.Expiration
	}
	return 0
}

func (m *UdpMessage_Ping) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

type UdpMessage_Pong struct {
	From                 *UdpMessage_Node           `protobuf:"bytes,1,req,name=From" json:"From,omitempty"`
	To                   *UdpMessage_Node           `protobuf:"bytes,2,req,name=To" json:"To,omitempty"`
	FromSubNetId         []*UdpMessage_SubNetworkID `protobuf:"bytes,3,rep,name=FromSubNetId" json:"FromSubNetId,omitempty"`
	SubNetId             *UdpMessage_SubNetworkID   `protobuf:"bytes,4,req,name=SubNetId" json:"SubNetId,omitempty"`
	Id                   *uint64                    `protobuf:"varint,5,req,name=Id" json:"Id,omitempty"`
	Expiration           *uint64                    `protobuf:"varint,6,opt,name=Expiration" json:"Expiration,omitempty"`
	Extra                []byte                     `protobuf:"bytes,7,opt,name=Extra" json:"Extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UdpMessage_Pong) Reset()         { *m = UdpMessage_Pong{} }
func (m *UdpMessage_Pong) String() string { return proto.CompactTextString(m) }
func (*UdpMessage_Pong) ProtoMessage()    {}
func (*UdpMessage_Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 3}
}
func (m *UdpMessage_Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage_Pong.Unmarshal(m, b)
}
func (m *UdpMessage_Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage_Pong.Marshal(b, m, deterministic)
}
func (dst *UdpMessage_Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage_Pong.Merge(dst, src)
}
func (m *UdpMessage_Pong) XXX_Size() int {
	return xxx_messageInfo_UdpMessage_Pong.Size(m)
}
func (m *UdpMessage_Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage_Pong proto.InternalMessageInfo

func (m *UdpMessage_Pong) GetFrom() *UdpMessage_Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *UdpMessage_Pong) GetTo() *UdpMessage_Node {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *UdpMessage_Pong) GetFromSubNetId() []*UdpMessage_SubNetworkID {
	if m != nil {
		return m.FromSubNetId
	}
	return nil
}

func (m *UdpMessage_Pong) GetSubNetId() *UdpMessage_SubNetworkID {
	if m != nil {
		return m.SubNetId
	}
	return nil
}

func (m *UdpMessage_Pong) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UdpMessage_Pong) GetExpiration() uint64 {
	if m != nil && m.Expiration != nil {
		return *m.Expiration
	}
	return 0
}

func (m *UdpMessage_Pong) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

type UdpMessage_FindNode struct {
	From                 *UdpMessage_Node           `protobuf:"bytes,1,req,name=From" json:"From,omitempty"`
	To                   *UdpMessage_Node           `protobuf:"bytes,2,req,name=To" json:"To,omitempty"`
	MaskBits             *int32                     `protobuf:"varint,3,req,name=MaskBits" json:"MaskBits,omitempty"`
	FromSubNetId         []*UdpMessage_SubNetworkID `protobuf:"bytes,4,rep,name=FromSubNetId" json:"FromSubNetId,omitempty"`
	SubNetId             *UdpMessage_SubNetworkID   `protobuf:"bytes,5,req,name=SubNetId" json:"SubNetId,omitempty"`
	Target               []byte                     `protobuf:"bytes,6,req,name=Target" json:"Target,omitempty"`
	Id                   *uint64                    `protobuf:"varint,7,req,name=Id" json:"Id,omitempty"`
	Expiration           *uint64                    `protobuf:"varint,8,opt,name=Expiration" json:"Expiration,omitempty"`
	Extra                []byte                     `protobuf:"bytes,9,opt,name=Extra" json:"Extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UdpMessage_FindNode) Reset()         { *m = UdpMessage_FindNode{} }
func (m *UdpMessage_FindNode) String() string { return proto.CompactTextString(m) }
func (*UdpMessage_FindNode) ProtoMessage()    {}
func (*UdpMessage_FindNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 4}
}
func (m *UdpMessage_FindNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage_FindNode.Unmarshal(m, b)
}
func (m *UdpMessage_FindNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage_FindNode.Marshal(b, m, deterministic)
}
func (dst *UdpMessage_FindNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage_FindNode.Merge(dst, src)
}
func (m *UdpMessage_FindNode) XXX_Size() int {
	return xxx_messageInfo_UdpMessage_FindNode.Size(m)
}
func (m *UdpMessage_FindNode) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage_FindNode.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage_FindNode proto.InternalMessageInfo

func (m *UdpMessage_FindNode) GetFrom() *UdpMessage_Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *UdpMessage_FindNode) GetTo() *UdpMessage_Node {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *UdpMessage_FindNode) GetMaskBits() int32 {
	if m != nil && m.MaskBits != nil {
		return *m.MaskBits
	}
	return 0
}

func (m *UdpMessage_FindNode) GetFromSubNetId() []*UdpMessage_SubNetworkID {
	if m != nil {
		return m.FromSubNetId
	}
	return nil
}

func (m *UdpMessage_FindNode) GetSubNetId() *UdpMessage_SubNetworkID {
	if m != nil {
		return m.SubNetId
	}
	return nil
}

func (m *UdpMessage_FindNode) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *UdpMessage_FindNode) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UdpMessage_FindNode) GetExpiration() uint64 {
	if m != nil && m.Expiration != nil {
		return *m.Expiration
	}
	return 0
}

func (m *UdpMessage_FindNode) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

type UdpMessage_Neighbors struct {
	From                 *UdpMessage_Node           `protobuf:"bytes,1,req,name=From" json:"From,omitempty"`
	To                   *UdpMessage_Node           `protobuf:"bytes,2,req,name=To" json:"To,omitempty"`
	FromSubNetId         []*UdpMessage_SubNetworkID `protobuf:"bytes,3,rep,name=FromSubNetId" json:"FromSubNetId,omitempty"`
	SubNetId             *UdpMessage_SubNetworkID   `protobuf:"bytes,5,req,name=SubNetId" json:"SubNetId,omitempty"`
	Nodes                []*UdpMessage_Node         `protobuf:"bytes,6,rep,name=Nodes" json:"Nodes,omitempty"`
	Id                   *uint64                    `protobuf:"varint,4,req,name=Id" json:"Id,omitempty"`
	Expiration           *uint64                    `protobuf:"varint,7,opt,name=Expiration" json:"Expiration,omitempty"`
	Extra                []byte                     `protobuf:"bytes,8,opt,name=Extra" json:"Extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UdpMessage_Neighbors) Reset()         { *m = UdpMessage_Neighbors{} }
func (m *UdpMessage_Neighbors) String() string { return proto.CompactTextString(m) }
func (*UdpMessage_Neighbors) ProtoMessage()    {}
func (*UdpMessage_Neighbors) Descriptor() ([]byte, []int) {
	return fileDescriptor_udpmsg_483e3fd41e3898cb, []int{0, 5}
}
func (m *UdpMessage_Neighbors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpMessage_Neighbors.Unmarshal(m, b)
}
func (m *UdpMessage_Neighbors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpMessage_Neighbors.Marshal(b, m, deterministic)
}
func (dst *UdpMessage_Neighbors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpMessage_Neighbors.Merge(dst, src)
}
func (m *UdpMessage_Neighbors) XXX_Size() int {
	return xxx_messageInfo_UdpMessage_Neighbors.Size(m)
}
func (m *UdpMessage_Neighbors) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpMessage_Neighbors.DiscardUnknown(m)
}

var xxx_messageInfo_UdpMessage_Neighbors proto.InternalMessageInfo

func (m *UdpMessage_Neighbors) GetFrom() *UdpMessage_Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *UdpMessage_Neighbors) GetTo() *UdpMessage_Node {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *UdpMessage_Neighbors) GetFromSubNetId() []*UdpMessage_SubNetworkID {
	if m != nil {
		return m.FromSubNetId
	}
	return nil
}

func (m *UdpMessage_Neighbors) GetSubNetId() *UdpMessage_SubNetworkID {
	if m != nil {
		return m.SubNetId
	}
	return nil
}

func (m *UdpMessage_Neighbors) GetNodes() []*UdpMessage_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *UdpMessage_Neighbors) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UdpMessage_Neighbors) GetExpiration() uint64 {
	if m != nil && m.Expiration != nil {
		return *m.Expiration
	}
	return 0
}

func (m *UdpMessage_Neighbors) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func init() {
	proto.RegisterType((*UdpMessage)(nil), "udpmsg.pb.UdpMessage")
	proto.RegisterType((*UdpMessage_SubNetworkID)(nil), "udpmsg.pb.UdpMessage.SubNetworkID")
	proto.RegisterType((*UdpMessage_Node)(nil), "udpmsg.pb.UdpMessage.Node")
	proto.RegisterType((*UdpMessage_Ping)(nil), "udpmsg.pb.UdpMessage.Ping")
	proto.RegisterType((*UdpMessage_Pong)(nil), "udpmsg.pb.UdpMessage.Pong")
	proto.RegisterType((*UdpMessage_FindNode)(nil), "udpmsg.pb.UdpMessage.FindNode")
	proto.RegisterType((*UdpMessage_Neighbors)(nil), "udpmsg.pb.UdpMessage.Neighbors")
	proto.RegisterEnum("udpmsg.pb.UdpMessage_MessageType", UdpMessage_MessageType_name, UdpMessage_MessageType_value)
}

func init() { proto.RegisterFile("udpmsg.proto", fileDescriptor_udpmsg_483e3fd41e3898cb) }

var fileDescriptor_udpmsg_483e3fd41e3898cb = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x95, 0xcd, 0x6e, 0x9b, 0x4c,
	0x14, 0x86, 0x3f, 0x0f, 0x03, 0x86, 0x63, 0x62, 0xa1, 0xd1, 0xa7, 0x68, 0xc4, 0xc2, 0xa5, 0x5e,
	0xa1, 0x2e, 0x50, 0xe5, 0x65, 0xab, 0x66, 0x91, 0xf8, 0xa7, 0x2c, 0x82, 0xd1, 0x84, 0x5c, 0x00,
	0x16, 0x94, 0xa2, 0xc8, 0x0c, 0x02, 0xa2, 0xa6, 0xd7, 0xd1, 0x1b, 0xe9, 0x5d, 0xb5, 0x97, 0x51,
	0x31, 0x60, 0x42, 0x55, 0x63, 0xb5, 0x51, 0xbb, 0xa8, 0xd4, 0x95, 0xe7, 0x1c, 0xbd, 0xcf, 0xfc,
	0x3c, 0x9a, 0x31, 0xa0, 0xdf, 0x47, 0xf9, 0xbe, 0x4c, 0x9c, 0xbc, 0xe0, 0x15, 0x27, 0xda, 0xa1,
	0xda, 0xcd, 0x3f, 0x4d, 0x01, 0x6e, 0xa3, 0xfc, 0x3a, 0x2e, 0xcb, 0x30, 0x89, 0xc9, 0x6b, 0x18,
	0xef, 0xcb, 0x24, 0xf8, 0x98, 0xc7, 0x74, 0x64, 0x21, 0x7b, 0xba, 0x78, 0xee, 0x74, 0x59, 0xe7,
	0x31, 0xe7, 0xb4, 0xbf, 0x75, 0x90, 0x1d, 0x08, 0xe2, 0x00, 0xce, 0xd3, 0x2c, 0xa1, 0xc8, 0x1a,
	0xd9, 0x93, 0x85, 0x79, 0x9c, 0xf4, 0xd3, 0x2c, 0x61, 0x22, 0x27, 0xf2, 0x3c, 0x4b, 0xa8, 0x74,
	0x32, 0xcf, 0x45, 0x9e, 0x67, 0x09, 0x79, 0x05, 0xea, 0xbb, 0x34, 0x8b, 0x3c, 0x1e, 0xc5, 0x14,
	0x0b, 0x66, 0x76, 0x9c, 0x59, 0xb7, 0x29, 0xd6, 0xe5, 0xc9, 0x1b, 0xd0, 0xb2, 0x38, 0x4d, 0xde,
	0xef, 0x78, 0x51, 0x52, 0x59, 0xc0, 0xcf, 0x8e, 0xc3, 0xde, 0x21, 0xc6, 0x1e, 0x09, 0x73, 0x06,
	0xfa, 0xcd, 0xfd, 0xce, 0x8b, 0xab, 0x0f, 0xbc, 0xb8, 0x73, 0x97, 0x64, 0x0a, 0xc8, 0x8d, 0x84,
	0x22, 0x9d, 0x21, 0x37, 0x32, 0x19, 0x60, 0xb1, 0x4c, 0xdd, 0xf7, 0xbb, 0xbe, 0x4f, 0x0c, 0x90,
	0x6e, 0x97, 0x3e, 0x45, 0x16, 0xb2, 0xcf, 0x58, 0x3d, 0xac, 0x3b, 0xc1, 0x95, 0x4f, 0xa5, 0xa6,
	0x13, 0x5c, 0xf9, 0xe4, 0x1c, 0x94, 0x9a, 0x75, 0x23, 0x8a, 0x05, 0xd7, 0x56, 0xe6, 0x67, 0x04,
	0xd8, 0x6f, 0x3d, 0xad, 0x0b, 0xbe, 0x17, 0xd3, 0x0e, 0x7a, 0x12, 0xe7, 0x15, 0x39, 0xf2, 0x02,
	0x50, 0xc0, 0xc5, 0x9a, 0xa7, 0xd3, 0x28, 0xe0, 0x64, 0x0d, 0x7a, 0xcd, 0x34, 0x87, 0x73, 0x23,
	0x2a, 0x59, 0x92, 0x3d, 0x59, 0xcc, 0x8f, 0x53, 0x7d, 0x05, 0xec, 0x3b, 0x8e, 0x5c, 0x80, 0xda,
	0xcd, 0x81, 0xc5, 0xca, 0x3f, 0x33, 0x47, 0xc7, 0xb4, 0x42, 0x65, 0x0b, 0xd9, 0xb8, 0x16, 0x4a,
	0x66, 0x00, 0xab, 0x87, 0x3c, 0x2d, 0xc2, 0x2a, 0xe5, 0x19, 0x55, 0xac, 0x91, 0x8d, 0x59, 0xaf,
	0x43, 0xfe, 0x07, 0x79, 0xf5, 0x50, 0x15, 0x21, 0x1d, 0x5b, 0x23, 0x5b, 0x67, 0x4d, 0xd1, 0x28,
	0xe3, 0xff, 0x94, 0xfd, 0x82, 0xb2, 0xaf, 0x08, 0xd4, 0xc3, 0x7b, 0xf9, 0xa3, 0xda, 0x4c, 0x50,
	0xaf, 0xc3, 0xf2, 0xee, 0x32, 0xad, 0x4a, 0x71, 0xfb, 0x65, 0xd6, 0xd5, 0x3f, 0x28, 0xc5, 0xbf,
	0x41, 0xa9, 0xfc, 0x04, 0xa5, 0xe7, 0xa0, 0x04, 0x61, 0x91, 0xc4, 0x15, 0x55, 0x9a, 0xa7, 0xd8,
	0x54, 0xad, 0xea, 0xf1, 0x80, 0x6a, 0x75, 0x58, 0xb5, 0xd6, 0x57, 0xfd, 0x05, 0x81, 0xd6, 0xfd,
	0xbb, 0xfc, 0x75, 0x57, 0xf4, 0x29, 0x3e, 0x5f, 0x82, 0x5c, 0xef, 0xa9, 0xa4, 0x8a, 0xd8, 0xc0,
	0xa9, 0x6d, 0x37, 0xc1, 0xd6, 0x34, 0x1e, 0x30, 0x3d, 0x1e, 0x36, 0xad, 0xf6, 0x4c, 0xcf, 0x2f,
	0x60, 0xd2, 0xfb, 0x42, 0x11, 0x15, 0xb0, 0xef, 0x7a, 0x1b, 0xe3, 0x3f, 0x31, 0xda, 0x7a, 0x1b,
	0x63, 0x44, 0x74, 0x50, 0xd7, 0xae, 0xb7, 0xf4, 0xb6, 0xcb, 0x95, 0x81, 0xc8, 0x19, 0x68, 0xde,
	0xca, 0xdd, 0xbc, 0xbd, 0xdc, 0xb2, 0x1b, 0x43, 0xfa, 0x16, 0x00, 0x00, 0xff, 0xff, 0x95, 0xfb,
	0xc1, 0x0d, 0x2f, 0x07, 0x00, 0x00,
}
