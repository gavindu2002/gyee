// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpcpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message of non params.
type NonParamsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonParamsRequest) Reset()         { *m = NonParamsRequest{} }
func (m *NonParamsRequest) String() string { return proto.CompactTextString(m) }
func (*NonParamsRequest) ProtoMessage()    {}
func (*NonParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b06b22a5979f612a, []int{0}
}
func (m *NonParamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonParamsRequest.Unmarshal(m, b)
}
func (m *NonParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonParamsRequest.Marshal(b, m, deterministic)
}
func (dst *NonParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonParamsRequest.Merge(dst, src)
}
func (m *NonParamsRequest) XXX_Size() int {
	return xxx_messageInfo_NonParamsRequest.Size(m)
}
func (m *NonParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NonParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NonParamsRequest proto.InternalMessageInfo

// Response message of node info.
type NodeInfoResponse struct {
	// the node ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the node version.
	Version              uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b06b22a5979f612a, []int{1}
}
func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (dst *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(dst, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeInfoResponse) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type NewAccountRequest struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountRequest) Reset()         { *m = NewAccountRequest{} }
func (m *NewAccountRequest) String() string { return proto.CompactTextString(m) }
func (*NewAccountRequest) ProtoMessage()    {}
func (*NewAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b06b22a5979f612a, []int{2}
}
func (m *NewAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountRequest.Unmarshal(m, b)
}
func (m *NewAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountRequest.Marshal(b, m, deterministic)
}
func (dst *NewAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountRequest.Merge(dst, src)
}
func (m *NewAccountRequest) XXX_Size() int {
	return xxx_messageInfo_NewAccountRequest.Size(m)
}
func (m *NewAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountRequest proto.InternalMessageInfo

func (m *NewAccountRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type NewAccountResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountResponse) Reset()         { *m = NewAccountResponse{} }
func (m *NewAccountResponse) String() string { return proto.CompactTextString(m) }
func (*NewAccountResponse) ProtoMessage()    {}
func (*NewAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b06b22a5979f612a, []int{3}
}
func (m *NewAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountResponse.Unmarshal(m, b)
}
func (m *NewAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountResponse.Marshal(b, m, deterministic)
}
func (dst *NewAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountResponse.Merge(dst, src)
}
func (m *NewAccountResponse) XXX_Size() int {
	return xxx_messageInfo_NewAccountResponse.Size(m)
}
func (m *NewAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountResponse proto.InternalMessageInfo

func (m *NewAccountResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*NonParamsRequest)(nil), "rpcpb.NonParamsRequest")
	proto.RegisterType((*NodeInfoResponse)(nil), "rpcpb.NodeInfoResponse")
	proto.RegisterType((*NewAccountRequest)(nil), "rpcpb.NewAccountRequest")
	proto.RegisterType((*NewAccountResponse)(nil), "rpcpb.NewAccountResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminServiceClient interface {
	NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountResponse, error)
}

type adminServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminServiceClient(cc *grpc.ClientConn) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountResponse, error) {
	out := new(NewAccountResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.AdminService/NewAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
type AdminServiceServer interface {
	NewAccount(context.Context, *NewAccountRequest) (*NewAccountResponse, error)
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_NewAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).NewAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.AdminService/NewAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).NewAccount(ctx, req.(*NewAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewAccount",
			Handler:    _AdminService_NewAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	NodeInfo(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) NodeInfo(ctx context.Context, in *NonParamsRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/NodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	NodeInfo(context.Context, *NonParamsRequest) (*NodeInfoResponse, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_NodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NonParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).NodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/NodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).NodeInfo(ctx, req.(*NonParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NodeInfo",
			Handler:    _ApiService_NodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_b06b22a5979f612a) }

var fileDescriptor_rpc_b06b22a5979f612a = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0xbb, 0x0b, 0x5a, 0x3b, 0xa8, 0xe8, 0x5c, 0x8c, 0x3d, 0x48, 0xc9, 0xa9, 0xa7, 0x3d,
	0xb4, 0x57, 0x11, 0x16, 0x4f, 0x82, 0x14, 0xd9, 0xfe, 0x82, 0x34, 0x19, 0x31, 0x87, 0x26, 0x71,
	0x66, 0x5b, 0xff, 0xbe, 0x58, 0x13, 0xba, 0x7e, 0x1c, 0x67, 0x86, 0xe7, 0x7d, 0x93, 0x07, 0x26,
	0x9c, 0x6c, 0x93, 0x38, 0xf6, 0x11, 0x4f, 0x38, 0xd9, 0xb4, 0xd1, 0x08, 0x57, 0xab, 0x18, 0x5e,
	0x0c, 0x9b, 0xad, 0x74, 0xf4, 0xbe, 0x23, 0xe9, 0xf5, 0xfd, 0xd7, 0xce, 0xd1, 0x53, 0x78, 0x8d,
	0x1d, 0x49, 0x8a, 0x41, 0x08, 0x2f, 0xa1, 0xf6, 0x4e, 0x55, 0xb3, 0x6a, 0x3e, 0xe9, 0x6a, 0xef,
	0x50, 0xc1, 0x78, 0x4f, 0x2c, 0x3e, 0x06, 0x55, 0xcf, 0xaa, 0xf9, 0x45, 0x57, 0x46, 0xbd, 0x84,
	0xeb, 0x15, 0x7d, 0xb4, 0xd6, 0xc6, 0x5d, 0xe8, 0x73, 0x24, 0xde, 0x01, 0x24, 0x23, 0x92, 0xde,
	0xd8, 0x08, 0xe5, 0x98, 0xc1, 0x46, 0x37, 0x80, 0x43, 0x28, 0x97, 0x2a, 0x18, 0x1b, 0xe7, 0x98,
	0x44, 0x32, 0x52, 0xc6, 0xc5, 0x1a, 0xce, 0x5b, 0xb7, 0xf5, 0x61, 0x4d, 0xbc, 0xf7, 0x96, 0xf0,
	0x11, 0xe0, 0xc8, 0xa3, 0x6a, 0x0e, 0x9f, 0x6b, 0xfe, 0xbc, 0x63, 0x7a, 0xfb, 0xcf, 0xe5, 0xbb,
	0x4c, 0x8f, 0x16, 0xcf, 0x00, 0x6d, 0xf2, 0x25, 0xf2, 0x01, 0xce, 0x8a, 0x05, 0xbc, 0x29, 0xd8,
	0x2f, 0x55, 0xd3, 0xe3, 0xe1, 0xa7, 0x2f, 0x3d, 0xda, 0x9c, 0x1e, 0x3c, 0x2f, 0x3f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x04, 0xe4, 0x1a, 0x88, 0x74, 0x01, 0x00, 0x00,
}
